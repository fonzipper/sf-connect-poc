group 'salesforce-gainsight-sync'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        kotlinVersion = '1.2.60'
        springBootVersion = '2.0.4.RELEASE'
        h2 = '1.4.196'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-jpa"
apply plugin: 'application'
apply plugin: 'java'

mainClassName = "com.gainsight.ApplicationKt"
applicationName = "Gainsight"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "http://repo.spring.io/plugins-release/"
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    // Database Drivers
    compile ("org.postgresql:postgresql")
    compile ("org.apache.commons:commons-dbcp2")
    
    //http lib
    compile group: 'khttp', name: 'khttp', version: '0.1.0'
    
    //GSON
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    //Jackson Kotlin
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile group: 'joda-time', name: 'joda-time', version: '2.9.4'
    //Junit 5
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')

    testCompile('org.springframework.boot:spring-boot-starter-test')

}

//task stage(dependsOn: ['clean', 'installApp'])

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}